{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderCointainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppstIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","console","log","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContent","color","fadeIn","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7292782.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDu_SCleq02mUYPW3cLbWvkOmrMVevFwPY\",\n  authDomain: \"slack-clone-a5467.firebaseapp.com\",\n  projectId: \"slack-clone-a5467\",\n  storageBucket: \"slack-clone-a5467.appspot.com\",\n  messagingSenderId: \"212268689634\",\n  appId: \"1:212268689634:web:438281520ad05d9dec16bb\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {auth , provider, db };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../firebase\";\n\nfunction Header() {\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <HeaderCointainer>\n      {/* Header Left */}\n      <HeaderLeft>\n        <HeaderAvatar\n          onClick={() => auth.signOut()}\n          alt={user?.displayName}\n          src={user?.photoURL}\n        />\n        <AccessTimeIcon />\n      </HeaderLeft>\n      {/* Header Search */}\n      <HeaderSearch>\n        <SearchIcon />\n        <input placeholder=\"Search\" />\n      </HeaderSearch>\n      {/* Header Right*/}\n      <HeaderRight>\n        <HelpOutlineIcon />\n      </HeaderRight>\n    </HeaderCointainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderSearch = styled.div`\n  flex: 0.4;\n  opacity: 1;\n  border-radius: 6px;\n  background-color: #421f44;\n  text-align: center;\n  display: flex;\n  padding: 0 50px;\n  color: gray;\n  border: 1px gray solid;\n\n  > input {\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    min-width: 30vw;\n    outline: 0;\n    color: white;\n  }\n`;\n\nconst HeaderCointainer = styled.div`\n  display: flex;\n\n  position: fixed;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 0;\n  background-color: var(--slackcolor);\n  color: white;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        roomId: null,\r\n    },\r\n    reducers: {\r\n        enterRoom: (state, action) => {\r\n            state.roomId = action.payload.roomId;\r\n        },\r\n    },\r\n});\r\nexport const { enterRoom } = appSlice.actions;\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { db } from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from \"../features/appSlice\";\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please Enter your Channel Name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContainer\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span> {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContainer>\n  );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  padding-left: 2px;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.9;\n    background-color: #340e36;\n  }\n\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    padding: 15px;\n  }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport React from 'react'\nimport styled from \"styled-components\"\nimport CreateIcon from '@material-ui/icons/Create'\nimport InsertCommentIcon from '@material-ui/icons/InsertComment'\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport DraftsIcon from '@material-ui/icons/Drafts'\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport AppstIcon from '@material-ui/icons/Apps'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport SidebarOption from './SidebarOption'\nimport AddIcon from '@material-ui/icons/Add'\nimport { auth, db } from '../firebase'\nimport {useCollection} from 'react-firebase-hooks/firestore'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nfunction Sidebar() {\n    const [user] = useAuthState(auth);\n\n    const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>New Chat</h2>\n                    <h3>\n                    <FiberManualRecordIcon/>\n                    {user.displayName}\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon/>\n            </SidebarHeader>\n\n\n            <SidebarOption Icon = {InsertCommentIcon} title = \"Threads\"/>\n            <SidebarOption Icon = {InboxIcon} title = \"Mentions & Reactions\"/>\n            <SidebarOption Icon = {DraftsIcon} title = \"Saved Items\"/>\n            <SidebarOption Icon = {BookmarkBorderIcon} title = \"Channel Browser\"/>\n            <SidebarOption Icon = {PeopleAltIcon} title = \"People & User Groups\"/>\n            <SidebarOption Icon = {AppstIcon} title = \"Apps\"/>\n            <SidebarOption Icon = {FileCopyIcon} title = \"File Browser\"/>\n            <SidebarOption Icon = {ExpandLessIcon} title = \"Show Less\"/>\n        <hr/>\n        <SidebarOption Icon ={ExpandMoreIcon} title=\"Channels\"/>\n        <hr/>\n        <SidebarOption Icon ={AddIcon} addChannelOption title=\"Add Channel\"/>\n\n        {channels?.docs.map(doc => (\n            <SidebarOption key = {doc.id} id= {doc.id} title={doc.data().name}/>\n        ))}\n\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\ncolor: white;\nbackground-color: var(--slackcolor);\nflex: 0.3;\nborder-top : 1px solid #49274b;\nmax-width: 260px;\nmargin-top: 60px;\n\n>hr{\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #49274b;\n}\n`;\n\nconst SidebarHeader = styled.div`\ndisplay: flex;\nborder-bottom: 1px solid #49274b;\npadding: 13px;\n> .MuiSvgIcon-root{\n    padding: 8px;\n    color: #49274b;\n    font-size: 18px;\n    background-color: white;\n    border-radius: 999px;\n}\n`;\n\nconst SidebarInfo = styled.div`\nflex: 1;\n\n> h2{\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n}\n> h3{\n    display: flex;\n    font-size: 13px;\n    font-weight: 400;\n    margin-top: 400;\n    align-items: center;\n}\n\n> h3 > .MuiSvgIcon-root{\n    font-size: 14px;\n    margin-top: 1px;\n    margin-right: 2px;\n    color: green;\n}\n`;\n","import { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { auth, db } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction ChatInput({ channelName, channelId, chatRef}) {\n  const [input, setInput] = useState(\"\");\n  const [user] = useAuthState(auth);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    console.log(channelId);\n\n    if (!channelId) {\n      return false;\n    }\n\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      user: user.displayName,\n      userImage: user.photoURL,\n    });\n\n    chatRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      \n    })\n\n    setInput(\"\");\n  };\n\n  return (\n    <ChatInputContainer>\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={`Message #${channelName}`}\n        />\n        <Button hidden type=\"submit\" onClick={sendMessage}>\n          Send\n        </Button>\n      </form>\n    </ChatInputContainer>\n  );\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer = styled.div`\n\n  border-radius: 20px;\n\n  > form {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  > form > input {\n    position: fixed;\n    bottom: 30px;\n    width: 60%;\n    border: 1px solid gray;\n    border-radius: 3px;\n    padding: 20px;\n    outline: none;\n  }\n\n  > form > button {\n    display: none !important;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n  return (\n    <MessageContainer>\n      <img src={userImage} alt=\"\" />\n      <MessageInfo>\n        <h4>\n          {user}\n          {\"\"}\n          <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n        </h4>\n        <p>{message}</p>\n      </MessageInfo>\n    </MessageContainer>\n  );\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div`\ndisplay: flex;\nalign-items: center;\npadding: 20px;\n\n> img{\n    height: 50px;\n    border-radius: 8px;\n}\n`;\nconst MessageInfo = styled.div`\n\npadding-left: 10px;\n> h4 > span{\n    color: gray;\n    font-weight: 300;\n    margin-left: 4px;\n    font-size: 10px;\n}\n`;\n","import InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { selectRoomId } from \"../features/appSlice\";\nimport { db } from \"../firebase\";\nimport ChatInput from \"./ChatInput\";\nimport Message from \"./Message\";\n\nfunction Chat() {\n  const chatRef = useRef(null);\n  const roomId = useSelector(selectRoomId);\n  const [roomDetails] = useDocument(\n    roomId && db.collection(\"rooms\").doc(roomId)\n  );\n\n  const [roomMessages, loading] = useCollection(\n    roomId &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n  );\n\n  useEffect(() => {\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  }, [roomId, loading]);\n\n  return (\n    <ChatContainer>\n      {roomDetails && roomMessages && (\n        <>\n          <Header>\n            <HeaderLeft>\n              <h4>\n                <strong>#{roomDetails?.data().name}</strong>\n              </h4>\n              <StarBorderOutlinedIcon />\n            </HeaderLeft>\n\n            <HeaderRight>\n              <p>\n                <InfoOutlinedIcon /> Details\n              </p>\n            </HeaderRight>\n          </Header>\n\n          <ChatMessages>\n            {roomMessages?.docs.map((doc) => {\n              const { message, timestamp, user, userImage } = doc.data();\n\n              return (\n                <Message\n                  key={doc.id}\n                  message={message}\n                  timestamp={timestamp}\n                  user={user}\n                  userImage={userImage}\n                />\n              );\n            })}\n            <ChatBottom ref={chatRef} />\n          </ChatMessages>\n\n          <ChatInput\n            chatRef={chatRef}\n            channelName={roomDetails?.data().name}\n            channelId={roomId}\n          />\n        </>\n      )}\n    </ChatContainer>\n  );\n}\n\nexport default Chat;\n\nconst ChatBottom = styled.div``;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  > h4 {\n    display: flex;\n    text-transform: lowercase;\n    margin-right: 10px;\n  }\n\n  > h4 > .MuiSvgIcon-root {\n    margin-left: 10px;\n    font-size: 18px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  > p {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n  }\n\n  > p > .MuiSvgIcon-root {\n    margin-right: 5px !important;\n    font-size: 16px;\n  }\n`;\n\nconst ChatContainer = styled.div`\n  flex: 0.7;\n  flex-grow: 1;\n  overflow-y: scroll;\n  margin-top: 60px;\n`;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { auth, provider } from \"../firebase\";\n\nfunction Login() {\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithPopup(provider).catch((error)=> \n        alert(error.message))\n  };\n\n  return (\n    <LoginContainer>\n      <LoginInnerContainer>\n        <img\n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\n          alt=\"\"\n        />\n        <h1> Sign in to Slack</h1>\n        <p>basil.slack.com</p>\n\n        <Button onClick={signIn}>\n          Sign in with Google\n        </Button>\n      </LoginInnerContainer>\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  background-color: #f8f8f8;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n`;\n\nconst LoginInnerContainer = styled.div`\n  padding: 100px;\n  text-align: center;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  > img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 40px;\n  }\n  > button {\n    margin-top: 50px;\n    text-transform: inherit !important;\n    background-color: #0a8d48 !important;\n    color: white;\n  }\n`;\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport SideBar from \"./components/Sidebar\";\r\nimport Chat from \"./components/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./components/Login\";\r\nimport Spinner from 'react-spinkit'\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContent>\r\n        <img\r\n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\r\n          alt = \"\"\r\n          />\r\n\r\n          <Spinner\r\n            name = 'ball-spin-fade-loader'\r\n            color =  'purple'\r\n            fadeIn = \"none\"\r\n          />\r\n        </AppLoadingContent>\r\n      </AppLoading>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <SideBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AppLoading = styled.div`\r\ndisplay: grid;\r\nplace-items: center;\r\nheight: 100vh;\r\nwidth: 100%;\r\n`;\r\n\r\nconst AppLoadingContent = styled.div`\r\ntext-align: center;\r\npadding-bottom: 100px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\n> img{\r\n  height: 100px;\r\n  padding: 20px;\r\n  margin-bottom: 40px;\r\n\r\n}`;","import {configureStore} from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        app: appReducer,\r\n    },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}