{"version":3,"sources":["components/Header.js","firebase.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","HeaderCointainer","HeaderLeft","HeaderAvatar","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","GoogleAuthProvider","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","onClick","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppstIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","App","className","AppBody","path","exact","configureStore","reducer","app","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.117cc881.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {Avatar} from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\n\nfunction Header() {\n  return (\n    <HeaderCointainer>\n      {/* Header Left */}\n      <HeaderLeft>\n        <HeaderAvatar/>\n        <AccessTimeIcon/>    \n      </HeaderLeft>\n      {/* Header Search */}\n      <HeaderSearch>\n        <SearchIcon/>\n        <input placeholder = \"Search\"/>\n      </HeaderSearch>\n      {/* Header Right*/}\n      <HeaderRight>\n      <HelpOutlineIcon/>\n      </HeaderRight>\n    </HeaderCointainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderSearch = styled.div`\nflex: 0.4;\nopacity: 1;\nborder-radius: 6px;\nbackground-color: #421f44;\ntext-align: center;\ndisplay: flex;\npadding: 0 50px;\ncolor: gray;\nborder: 1px gray solid;   \n\n> input{\n  background-color: transparent;\n  border: none;\n  text-align:center;\n  min-width: 30vw;\n  outline: 0;\n  color: white;\n\n} \n\n`;\n\nconst HeaderCointainer = styled.div`\ndisplay:flex;\n\nposition: fixed;\nwidth: 100%;\nalign-items: center;\njustify-content: space-between;\npadding: 10px 0;\nbackground-color:  var(--slackcolor);\ncolor: white;\n\n`;\n\nconst HeaderLeft = styled.div`\nflex: 0.3;\ndisplay: flex;\nalign-items: center;\nmargin-left: 20px;\n\n> .MuiSvgIcon-root {\n  margin-left: auto;\n  margin-right: 30px;\n}\n\n`;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n\n  > .MuiSvgIcon-root{\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\ncursor: pointer;\n\n\n:hover{\n  opacity: 0.8;\n}\n\n`;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDu_SCleq02mUYPW3cLbWvkOmrMVevFwPY\",\n  authDomain: \"slack-clone-a5467.firebaseapp.com\",\n  projectId: \"slack-clone-a5467\",\n  storageBucket: \"slack-clone-a5467.appspot.com\",\n  messagingSenderId: \"212268689634\",\n  appId: \"1:212268689634:web:438281520ad05d9dec16bb\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {auth , provider, db };","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        roomId: null,\r\n    },\r\n    reducers: {\r\n        enterRoom: (state, action) => {\r\n            state.roomId = action.payload.roomId;\r\n        },\r\n    },\r\n});\r\nexport const { enterRoom } = appSlice.actions;\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { db } from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from \"../features/appSlice\";\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please Enter your Channel Name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContainer\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span> {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContainer>\n  );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  padding-left: 2px;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.9;\n    background-color: #340e36;\n  }\n\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    padding: 15px;\n  }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport React from 'react'\nimport styled from \"styled-components\"\nimport CreateIcon from '@material-ui/icons/Create'\nimport InsertCommentIcon from '@material-ui/icons/InsertComment'\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport DraftsIcon from '@material-ui/icons/Drafts'\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport AppstIcon from '@material-ui/icons/Apps'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport SidebarOption from './SidebarOption'\nimport AddIcon from '@material-ui/icons/Add'\nimport { db } from '../firebase'\nimport {useCollection} from 'react-firebase-hooks/firestore'\n\nfunction Sidebar() {\n    const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>New Chat</h2>\n                    <h3>\n                    <FiberManualRecordIcon/>\n                    Basil Maben\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon/>\n            </SidebarHeader>\n\n\n            <SidebarOption Icon = {InsertCommentIcon} title = \"Threads\"/>\n            <SidebarOption Icon = {InboxIcon} title = \"Mentions & Reactions\"/>\n            <SidebarOption Icon = {DraftsIcon} title = \"Saved Items\"/>\n            <SidebarOption Icon = {BookmarkBorderIcon} title = \"Channel Browser\"/>\n            <SidebarOption Icon = {PeopleAltIcon} title = \"People & User Groups\"/>\n            <SidebarOption Icon = {AppstIcon} title = \"Apps\"/>\n            <SidebarOption Icon = {FileCopyIcon} title = \"File Browser\"/>\n            <SidebarOption Icon = {ExpandLessIcon} title = \"Show Less\"/>\n        <hr/>\n        <SidebarOption Icon ={ExpandMoreIcon} title=\"Channels\"/>\n        <hr/>\n        <SidebarOption Icon ={AddIcon} addChannelOption title=\"Add Channel\"/>\n\n        {channels?.docs.map(doc => (\n            <SidebarOption key = {doc.id} id= {doc.id} title={doc.data().name}/>\n        ))}\n\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\ncolor: white;\nbackground-color: var(--slackcolor);\nflex: 0.3;\nborder-top : 1px solid #49274b;\nmax-width: 260px;\nmargin-top: 60px;\n\n>hr{\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #49274b;\n}\n`;\n\nconst SidebarHeader = styled.div`\ndisplay: flex;\nborder-bottom: 1px solid #49274b;\npadding: 13px;\n> .MuiSvgIcon-root{\n    padding: 8px;\n    color: #49274b;\n    font-size: 18px;\n    background-color: white;\n    border-radius: 999px;\n}\n`;\n\nconst SidebarInfo = styled.div`\nflex: 1;\n\n> h2{\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n}\n> h3{\n    display: flex;\n    font-size: 13px;\n    font-weight: 400;\n    margin-top: 400;\n    align-items: center;\n}\n\n> h3 > .MuiSvgIcon-root{\n    font-size: 14px;\n    margin-top: 1px;\n    margin-right: 2px;\n    color: green;\n}\n`;\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport SideBar from \"./components/Sidebar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <>\r\n          <Header />\r\n          <AppBody>\r\n            <SideBar />\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                {/* Chat */}\r\n              </Route>\r\n            </Switch>\r\n          </AppBody>\r\n        </>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        app: appReducer,\r\n    },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}